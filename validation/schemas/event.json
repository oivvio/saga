{
  "$ref": "#/definitions/IEvent",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "IEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/IEventPlayAudio"
        },

        {
          "$ref": "#/definitions/IEventNoop"
        },

        {
          "$ref": "#/definitions/IEventPlayAudioBasedOnAdHocValue"
        },
        {
          "$ref": "#/definitions/IEventPlayBackgroundAudio"
        },
        {
          "$ref": "#/definitions/IEventPickRandomSample"
        },
        {
          "$ref": "#/definitions/IEventGoToStation"
        },
        {
          "$ref": "#/definitions/IEventOpenStation"
        },

        {
          "$ref": "#/definitions/IEventPushToAdHocArrayEvent"
        },
        {
          "$ref": "#/definitions/IEventChoiceBasedOnTags"
        },
        {
          "$ref": "#/definitions/IEventChoiceBasedOnAbsenceOfTags"
        },

        {
          "$ref": "#/definitions/IEventSetAdHocDataEvent"
        },
        {
          "$ref": "#/definitions/IEventStartTimer"
        },
        {
          "$ref": "#/definitions/IEventCancelTimer"
        },
        {
          "$ref": "#/definitions/IEventSwitchGotoStation"
        },

        {
          "$ref": "#/definitions/IEventPowerNameChoice"
        }
      ]
    },
    "IEventCancelTimer": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "cancelTimer",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["action", "name"],
      "type": "object"
    },

    "IEventChoiceBasedOnTags": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "choiceBasedOnTags",
          "type": "string"
        },
        "eventIfNotPresent": {
          "$ref": "#/definitions/IEvent"
        },
        "eventIfPresent": {
          "$ref": "#/definitions/IEvent"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["action", "tags", "eventIfPresent", "eventIfNotPresent"],
      "type": "object"
    },

    "IEventChoiceBasedOnAbsenceOfTags": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "choiceBasedOnAbsenceOfTags",
          "type": "string"
        },
        "eventIfNotPresent": {
          "$ref": "#/definitions/IEvent"
        },
        "eventIfPresent": {
          "$ref": "#/definitions/IEvent"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["action", "tags", "eventIfPresent", "eventIfNotPresent"],
      "type": "object"
    },

    "IEventPowerNameChoice": {
      "additionalProperties": true,
      "properties": {
        "action": {
          "const": "powerNameChoice",
          "type": "string"
        },

        "onFirstFailurePlay": {
          "type": "string"
        },
        "onSecondFailureGoTo": {
          "$ref": "#/definitions/StationID"
        },
        "onSecondFailurePlay": {
          "type": "string"
        },
        "onSuccessOpen": {
          "items": {
            "$ref": "#/definitions/StationID"
          },
          "type": "array"
        },
        "onSuccessPlay": {
          "type": "string"
        },

        "ghostOnFirstFailurePlay": {
          "type": "string"
        },
        "ghostOnSecondFailureGoTo": {
          "$ref": "#/definitions/StationID"
        },
        "ghostOnSecondFailurePlay": {
          "type": "string"
        },
        "ghostOnSuccessOpen": {
          "items": {
            "$ref": "#/definitions/StationID"
          },
          "type": "array"
        },
        "ghostOnSuccessPlay": {
          "type": "string"
        },

        "part": {
          "type": "number"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "action",
        "part",
        "onSuccessOpen",
        "onSuccessPlay",
        "onFirstFailurePlay",
        "onSecondFailurePlay",
        "onSecondFailureGoTo",
        "ghostOnSuccessOpen",
        "ghostOnSuccessPlay",
        "ghostOnFirstFailurePlay",
        "ghostOnSecondFailurePlay",
        "ghostOnSecondFailureGoTo",
        "value"
      ],

      "type": "object"
    },

    "IEventGoToStation": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "goToStation",
          "type": "string"
        },
        "toStation": {
          "$ref": "#/definitions/StationID"
        }
      },
      "required": ["action", "toStation"],
      "type": "object"
    },

    "IEventOpenStation": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "openStation",
          "type": "string"
        },
        "toStation": {
          "$ref": "#/definitions/StationID"
        },
        "then": {
          "$ref": "#/definitions/IEvent"
        }
      },
      "required": ["action", "toStation"],
      "type": "object"
    },

    "IEventPickRandomSample": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "pickRandomSample",
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "population": {
          "items": {},
          "type": "array"
        }
      },
      "required": ["action", "population", "key"],
      "type": "object"
    },

    "IEventPlayAudio": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "playAudio",
          "type": "string"
        },
        "audioFilenames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "then": {
          "$ref": "#/definitions/IEvent"
        },
        "wait": {
          "type": "number"
        }
      },
      "required": ["action", "wait", "audioFilenames"],
      "type": "object"
    },

    "IEventNoop": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "noop",
          "type": "string"
        }
      },
      "required": ["action"],
      "type": "object"
    },

    "IEventPlayAudioBasedOnAdHocValue": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "playAudioBasedOnAdHocValue",
          "type": "string"
        },
        "audioFilenameMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "then": {
          "$ref": "#/definitions/IEvent"
        },

        "key": {
          "type": "string"
        }
      },
      "required": ["action", "key", "audioFilenameMap"],
      "type": "object"
    },
    "IEventPlayBackgroundAudio": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "playBackgroundAudio",
          "type": "string"
        },
        "audioFilename": {
          "type": "string"
        },
        "cancelOnLeave": {
          "type": "boolean"
        },
        "loop": {
          "type": "boolean"
        },
        "wait": {
          "type": "number"
        }
      },
      "required": ["action", "audioFilename", "wait", "cancelOnLeave", "loop"],
      "type": "object"
    },
    "IEventPushToAdHocArrayEvent": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "pushToAdHocArray",
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {}
      },
      "required": ["action", "key", "value"],
      "type": "object"
    },
    "IEventSetAdHocDataEvent": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "setAdHocData",
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {}
      },
      "required": ["action", "key", "value"],
      "type": "object"
    },
    "IEventStartTimer": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "startTimer",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "then": {
          "$ref": "#/definitions/IEvent"
        },
        "time": {
          "type": "number"
        }
      },
      "required": ["action", "name", "time", "then"],
      "type": "object"
    },
    "IEventSwitchGotoStation": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "const": "switchGotoStation",
          "type": "string"
        },
        "switch": {
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "condition": {
                    "const": "adHocKeyEquals",
                    "type": "string"
                  },
                  "parameters": {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "toStation": {
                        "$ref": "#/definitions/StationID"
                      },
                      "value": {}
                    },
                    "required": ["key", "value", "toStation"],
                    "type": "object"
                  }
                },
                "required": ["condition", "parameters"],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "condition": {
                    "enum": ["adHocKeysAreEqual", "adHocKeysAreNotEqual"],
                    "type": "string"
                  },
                  "parameters": {
                    "additionalProperties": false,
                    "properties": {
                      "firstKey": {
                        "type": "string"
                      },
                      "secondKey": {
                        "type": "string"
                      },
                      "toStation": {
                        "$ref": "#/definitions/StationID"
                      }
                    },
                    "required": ["firstKey", "secondKey", "toStation"],
                    "type": "object"
                  }
                },
                "required": ["condition", "parameters"],
                "type": "object"
              }
            ]
          },
          "type": "array"
        }
      },
      "required": ["action", "switch"],
      "type": "object"
    },
    "StationID": {
      "type": "string"
    }
  }
}
