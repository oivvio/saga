{
  "type": "object",
  "$defs": {
    "event": {
      "type": "object",
      "properties": {
        "action": {
          "description": "Available event events",
          "type": "string",
          "enum": [
            "playAudio",
            "playAudioBasedOnAdHocValue",
            "playBackgroundAudio",
            "goToStation",
            "pickRandomSample",
            "pushToAdHocArray",
            "switchGotoStation",
            "choiceBasedOnTags"
          ]
        },

        "switch": {
          "description": "Used with pickRandomSample & pushToAdHocArray",
          "type": "array"
        },

        "key": {
          "description": "Used with pickRandomSample & pushToAdHocArray & playAudioBaseOnAdHocValue",
          "type": "string"
        },

        "audioFilenameMap": {
          "description": "Map from a value to a filname in playAudioBasedOnAdHocValue",
          "type": "object"
        },

        "population": {
          "description": "Used with pickRandomSample",
          "type": "array"
        },

        "value": {
          "description": "Used with pushToAdHocArray"
        },

        "audioFilenames": {
          "description": "Filename including file name extension. For main audio events. Order is important. The first is our A track, second C and so on.",
          "type": "array",
          "items": { "type": "string" },
          "minItems": 1
        },

        "audioFilename": {
          "description": "Filename including file name extension. For background audio events.",
          "type": "string"
        },

        "tags": {
          "description": "choiceBasedTags requires",
          "type": "array",
          "items": { "type": "string" },
          "minItems": 1
        },

        "eventIfPresent": {
          "$ref": "file:./event.json#/$defs/event"
        },

        "eventIfNotPresent": {
          "$ref": "file:./event.json#/$defs/event"
        },

        "timerName": { "type": "string" },
        "cancelOnLeave": { "type": "boolean" },
        "wait": { "type": "number" },
        "loop": { "type": "boolean" },
        "opens": { "type": "string" },
        "timeLimit": { "type": "number" },
        "then": {
          "$ref": "file:./event.json#/$defs/event"
        },

        "goToStation": { "type": "string" },
        "toStation": { "type": "string" },

        "condition": {
          "description": "Name of condition to check",
          "type": "string",
          "enum": ["hasTag"]
        },
        "conditionArgs": { "type": "string" }
      },

      "allOf": [
        {
          "if": {
            "properties": { "action": { "const": "playAudio" } },
            "required": ["action"]
          },
          "then": { "required": ["audioFilenames", "wait"] }
        },

        {
          "if": {
            "properties": { "action": { "const": "pickRandomSample" } },
            "required": ["action"]
          },
          "then": { "required": ["population", "key"] }
        },

        {
          "if": {
            "properties": { "action": { "const": "pushToAdHocArray" } },
            "required": ["action"]
          },
          "then": { "required": ["key", "value"] }
        },

        {
          "if": {
            "properties": { "action": { "const": "playBackgroundAudio" } },
            "required": ["action"]
          },
          "then": {
            "required": ["audioFilename", "loop", "cancelOnLeave", "wait"]
          }
        },

        {
          "if": {
            "properties": { "action": { "const": "startTimeLimit" } },
            "required": ["action"]
          },
          "then": {
            "required": [
              "timerName",
              "cancelOnLeave",
              "timeLimit",
              "onTimeLimitEnd"
            ]
          }
        },

        {
          "if": {
            "properties": { "action": { "const": "goToStation" } },
            "required": ["action"]
          },
          "then": {
            "required": ["toStation"]
          }
        },

        {
          "if": {
            "properties": { "action": { "const": "choiceBaseOnTags" } },
            "required": ["action"]
          },
          "then": {
            "required": ["tags", "eventIfPresent", "eventIfNotPresent"]
          }
        },

        {
          "if": {
            "properties": { "condition": { "const": "hasTag" } },
            "required": ["condition"]
          },
          "then": { "required": ["conditionArgs", "action"] }
        }
      ],
      "additionalProperties": false
    }
  }
}
